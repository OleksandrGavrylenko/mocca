	---
	Introduction
	---
	EGIZ
	---
	2010
	---


MOCCA Project

	The MOCCA project has been initiated by {{{http://www.egiz.gv.at}EGIZ}} as a joint initiative of {{{http://www.bka.gv.at/}Federal Chancellery Austria}} and {{{http://www.tugraz.at}Graz University of Technology}} to develop a modular, open source {{{http://www.buergerkarte.at/konzept/securitylayer/spezifikation/20040514/Index.en.html}citizen card environment}}.

	Currently two quite different implementations of a citizen card environment in Java are provided:
    
	* <<MOCCA Local>>
    
	MOCCA Local (aka <BKULocal>) is the "classic" implementation of a citizen card environment <to be installed as local application on the user's PC>. MOCCA Local runs as a service in the background and listens on TCP ports 3495 and 3496 for {{{http://www.buergerkarte.at/konzept/securitylayer/spezifikation/20040514/core/Core.en.html}Security Layer Requests}}. The {{{http://www.buergerkarte.at/konzept/securitylayer/spezifikation/20040514/bindings/Bindings.en.html#http}HTTP binding}} allows the functions of the user's citizen card to be accessed by local applications as well as by web-applications via the user's web browser.

	MOCCA Local is provided as Java Web Start application via {{http://webstart.buergerkarte.at}}.
    
	* <<MOCCA Online>>

	MOCCA Online (aka <BKUOnline>) provides a new approach that overcomes the need to install dedicated software on the user's PC. MOCCA Online  is <to be installed as online service> (usually together with a citizen card enabled web application) by a service provider. It offers the same interfaces and protocol bindings for integration with applications via the user's browser as MOCCA Local. Access to the user's citizen card and user interaction is performed via a Java Applet. Therefore, a user only needs a properly installed (PC/SC supported) card reader and a recent version of the Java browser plug-in to be able to use a citizen card with MOCCA Online.  
	
	[]

	Both implementations build upon a common set of modules which are also provided by the MOCCA project and offer citizen card related functionality.

Releases

	Current stable versions are 1.2.x. Releases can be found in the {{{http://egovlabs.gv.at/frs/?group_id=13}download}} section.

	NOTE: For <<installation of MOCCA Local>> please go to <<{{http://webstart.buergerkarte.at}}>>!

Development

	The current development version of MOCCA is 1.3.

* Whats new in 1.3?

	* Some parts of MOCCA needed to be redesigned to allow for a better integration with other software deployed within the same servlet container.

	It is now possible to deploy multiple instances of MOCCA within the same servlet container. It should also be possible to deploy MOCCA together with most other software within a single servlet container.

	* Configuration has been redesigned and is now based on {{{http://commons.apache.org/configuration/}commons-configuration}}.

	
 
Licensing

	The MOCCA project as provided by {{{http://www.egiz.gv.at}EGIZ}} is licensed according to the terms of the {{{http://www.apache.org/licenses/LICENSE-2.0.html}Apache License 2.0}}.

	MOCCA also requires software provided by third parties. Most of this software is free and open source. Some required software is licensed under a commercial license. This includes software provided by {{{http://www.sic.st/}Stiftung Secure Information and Communication Technologies (SIC)}}, which however grants a free-of-charge license for the use of their software together with the unchanged software provided by the MOCCA project.

	{{{http://www.sic.st/}Stiftung Secure Information and Communication Technologies (SIC)}} also offers a free-of-charge {{{http://jce.iaik.tugraz.at/sic/Sales/Licences/License-for-Open-Source-Projects}license for open source projects}} which are released under {{{http://www.fsf.org/licenses/gpl.html}GPL Version 2.0}}. This allows open source projects to change or extend software developed by the MOCCA project and obtain a free-of-charge license for software required by MOCCA, as long as such projects are released under GPL Version 2.0. The licensee is responsible for obtaining any required licenses.