<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>bku</artifactId>
    <groupId>at.gv.egiz</groupId>
    <version>1.2.3</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>at.gv.egiz</groupId>
  <artifactId>BKUWebStart</artifactId>
  <packaging>jar</packaging>
  <name>BKU Web Start</name>
  <!-- 
   | IMPORTANT: update jnlp/resources/version.xml (BKUWebStart and utils) and
   | include-webstart profile in BKUOnline if version changes
   |-->
  <version>1.2.3</version>
  <url>http://mocca.egovlabs.gv.at/</url>
  <description>BÃ¼rgerkartenumgebung</description>
  
  <build>
    <plugins>

      <!-- Include the BKULocal war artifact in the BKUWebStart jar
       |   BKULauncher resolves resource and copies it to jetty's webapp dir 
       |
       |   don't: overlay BKULocal with maven-war-plugin 
       |   don't: unpack BKULocal dependency (jetty and webstart classloaders interfere) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>at.gv.egiz</groupId>
                  <artifactId>BKULocal</artifactId>
                  <type>war</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/classes</outputDirectory>
                </artifactItem>
              </artifactItems>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Build the web start app
       |   Default is to build BKUWebStart.zip incl. jnlp for local execution
       |   If include-webstart is active, the jnlp will contain DownloadServlet specific placeholders (for codebase, etc) and versioning will be enabled.
       |   If pkcs11-sign is active (ie. the release build), pack200 will be activated, the the PKCS11 keystore will be used (and the adopted version of the plugin will be used).
       |-->
      <plugin>
        <artifactId>webstart-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo.webstart</groupId>
        <executions>
          <execution>
            <!-- no default phase, need lifecycle phase binding -->
            <phase>package</phase>
            <goals>
              <!-- IMPORTANT: USE jnlp-inline, otherwise no execution in install phase and
                  the .zip artifact is not installed
                  (parallel lifecycle build finished prior to install phase?) -->
              <goal>jnlp-inline</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludeTransitive>false</excludeTransitive>
          <!-- causes unsignAlreadySignedJars to fail
               (cf. http://jira.codehaus.org/browse/MWEBSTART-107)
          <libPath>lib</libPath-->
          <jnlp>
            <inputTemplateResourcePath>${project.basedir}/src/main/jnlp</inputTemplateResourcePath>
            <inputTemplate>template.xml</inputTemplate>
            <outputFile>mocca.jnlp</outputFile>
            <mainClass>at.gv.egiz.bku.webstart.Launcher</mainClass>
            <j2seVersion>1.6+</j2seVersion>
            <offlineAllowed>true</offlineAllowed>
            <allPermissions>true</allPermissions>
          </jnlp>
          <sign>
            <alias>test-applet signer</alias>
            <keystore>${project.basedir}/keystore.ks</keystore>
            <!-- Attention: configuration inherited by pkcs11-sign, uncomment!
                 (fixed in maven-webstart-plugin-1.0-beta-1-SNAPSHOT) -->
            <storepass>storepass</storepass>
            <keypass>keypass</keypass>
            <verify>true</verify>
            <keystoreConfig>
              <delete>false</delete>
              <gen>false</gen>
            </keystoreConfig>
          </sign>
          <pack200>false</pack200>
          <!--gzip>true</gzip-->
          <outputJarVersions>true</outputJarVersions>
          <!-- unsign IAIK signed libs -->
          <unsignAlreadySignedJars>true</unsignAlreadySignedJars>
          <verbose>true</verbose>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-buildnumber-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Build>${project.version}-r${buildNumber}</Implementation-Build>
            </manifestEntries>
          </archive>
          <verbose>true</verbose>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>standalone (non-webstart)</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <groupId>org.apache.maven.plugins</groupId>
            <configuration>
              <archive>
                <manifest>
                  <addClasspath>true</addClasspath>
                  <mainClass>at.gv.egiz.bku.webstart.Launcher</mainClass>
                </manifest>
                <manifestEntries>
                  <mode>development</mode>
                  <url>${pom.url}</url>
                  <SplashScreen-Image>at/gv/egiz/bku/webstart/splash.png</SplashScreen-Image>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <!-- TODO somehow provide javaws.jar on manifest class-path -->
    </profile>

    <profile>
      <id>pkcs11-sign</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>webstart-maven-plugin</artifactId>
            <groupId>org.codehaus.mojo.webstart</groupId>
            <!-- use pkcs11-patched webstart-maven-plugin-->
            <version>1.0-beta-1-mocca</version>
            <configuration>
              <sign>
                <keystore>NONE</keystore>
                <storetype>PKCS11</storetype>
                <providerClass>iaik.pkcs.pkcs11.provider.IAIKPkcs11</providerClass>
                <alias>a-sit</alias>
                <storepass>${pkcs11-pass}</storepass>
                <verify>true</verify>
                <keystoreConfig>
                  <delete>false</delete>
                  <gen>false</gen>
                </keystoreConfig>
              </sign>
              <pack200>true</pack200>
              <!--gzip>false</gzip-->
              <outputJarVersions>true</outputJarVersions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- development profile -->
      <id>local-webstart</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>webstart-maven-plugin</artifactId>
            <groupId>org.codehaus.mojo.webstart</groupId>
            <configuration>
              <jnlp>
                <inputTemplate>template-local.xml</inputTemplate>
                <outputFile>mocca-local.jnlp</outputFile>
              </jnlp>
              <outputJarVersions>false</outputJarVersions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>at.gv.egiz</groupId>
      <artifactId>BKULocal</artifactId>
      <version>1.2.3</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>at.gv.egiz</groupId>
      <artifactId>BKUCertificates</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <artifactId>utils</artifactId>
      <groupId>at.gv.egiz</groupId>
      <version>1.2.3</version>
      <exclusions>
        <exclusion>
          <artifactId>iaik_ecc_signed</artifactId>
          <groupId>iaik</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <!-- Jetty 6.1.15+ required, see
     |   http://jira.codehaus.org/browse/JETTY-843
     |-->
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <version>6.1.19</version>
    </dependency>
    <!-- JSP support
     |   http://jira.codehaus.org/browse/JETTY-827
     |   jsp-2.1-jetty-6.1.19 depends on the required jsp-2.1-glassfish jars (?)
     |-->
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jsp-2.1-jetty</artifactId>
      <version>6.1.19</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.5.8</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.5.8</version>
    </dependency>

    <!-- javax.jnlp.* -->
    <dependency>
      <groupId>jre</groupId>
      <artifactId>javaws</artifactId>
      <version>6.0</version>
      <type>jar</type>
      <scope>system</scope>
      <systemPath>${java.home}/lib/javaws.jar</systemPath>
    </dependency>
  </dependencies>
</project>
